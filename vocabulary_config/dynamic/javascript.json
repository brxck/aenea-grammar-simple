{
  "name": "javascript",
  "tags": ["all"],
  "vocabulary": {
    "true": "true",
    "false": "false",

    "op and": " && ",
    "op equals": " === ",
    "op not": " !== ",
    "op or": " || ",

    "await": "await ",
    "async": "async ",

    "try": [
      { "type": "Text", "args": ["try {"] },
      { "type": "Key", "args": ["enter"] }
    ],
    "catch": [
      { "type": "Text", "args": [" catch () {"] },
      { "type": "Key", "args": ["left:3"] }
    ],
    "finally": [
      { "type": "Text", "args": [" finally {"] },
      { "type": "Key", "args": ["enter"] }
    ],

    "do loop": [
      { "type": "Text", "args": ["do {"] },
      { "type": "Key", "args": ["enter"] }
    ],
    "for loop": [
      { "type": "Text", "args": ["for () {"] },
      { "type": "Key", "args": ["left:3"] }
    ],
    "while loop": [
      { "type": "Text", "args": ["while () {"] },
      { "type": "Key", "args": ["left:3"] }
    ],
    "with block": [
      { "type": "Text", "args": ["with () {"] },
      { "type": "Key", "args": ["left:3"] }
    ],

    "if": "if (",
    "else": " else ",
    "else if": [
      { "type": "Text", "args": [" else if () {"] },
      { "type": "Key", "args": ["left:3"] }
    ],
    "op switch": [
      { "type": "Text", "args": ["switch () {"] },
      { "type": "Key", "args": ["left:3"] }
    ],

    "import": "import ",
    "export": "export ",
    "from": " from ",
    "extends ": " extends ",

    "open comment": "/* ",
    "close comment": " */",

    "const": "const ",
    "define": "def ",
    "delete": "delete ",
    "function": "function ",
    "let": "let ",
    "null": "null",
    "reg exp": "RegExp",
    "return": "return ",
    "this": "this",
    "var": "var "
  }
}
